OpenMDAO Version 1.0.4 Alhpa Release Notes
August 12, 2015

*Fixed bug where there was a key error when finite-differencing a Problem with 
params buried in sub-Groups.
* Changed filenames and option names for internal consistency
* Some setup performance improvements
* OpenMDAO imports made simpler, now from top-level packages (e.g. core, components, etc.)
* ExternalCode component added, with documentation added to User Guide.
* MetaModel Example added to User Guide.
* Fixed a bug where connections to promoted vars with src_indices were broken.
* User can connect a single element from a src array to a target scalar float variable.
* pyoptsparse now works with Python3
* MPI parallelization tutorial added to User Guide.
* check_partial_derivatives example added to User Guide.

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.3 Alpha Release Notes
July 24, 2015

* Another version issue, this time with the docs.   <:)

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.2 Alpha Release Notes
July 24, 2015

* Forgot to update __version__   <:)

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.1 Alpha Release Notes
July 24, 2015

* Auto-ordering of children of a Group (no longer running in instantiation order)
* Manual ordering of children of a Group is possible via the set_order method on Group
* MetaModel component and Kriging surrogate model were added
* Docs hosted on read-the-docs now

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0 Alpha Release Notes
July 20, 2015

Initial Release

Differences from previous code base:
* 10x smaller code base (~5000 lines of code compared to ~50,000 before)
* Compatible with both Python 2.7+ and Python 3.4+
* Install using pip, just like any other Python package
* No more Traits dependency, and no more weird class-like variable definitions anymore!
* Ability to manually group components to be finite-differenced together
* No more dataflow/workflow duality. Now you just define a single model hierarchy
* No more Assembly overhead. Grouping components no longer introduces any inefficiencies
* Parallel execution (and parallel adjoint derivatives) with an MPI distributed-memory data passing system

Install: http://openmdao.org/docs/getting-started/install.html
