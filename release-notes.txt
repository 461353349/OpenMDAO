OpenMDAO Version 1.1.0 Alpha Release Notes
September 22, 2015

API Changes
* Renamed 'ParamComp' to 'IndepVarComp,'' because it’s really just a component that
supplies one or more independent variables as outputs, and it has no parameters. And
overuse of term 'param' may have been causing confusion.

* ConstraintComp is going away, but user can add constraints directly to an optimizer
 via driver.add_constraint(‘<var_name>’, lower=xxx, upper=xxx, equals=xxxx)


Features
* Multiple documentation changes and fixes, including:
    - an example for running check_partial_derivatives,
    - an MPI parallelization tutorial,
    - ExecComp example that shows how to handle array vars,
    - better auto-documentation of our components/drivers (now including Options).
* User can solve for derivatives with a Petsc KSP solver.
* User can now create a recorder using SQLlite as the db w/shelve API.
* GMRES linear solver now uses solve_linear method for preconditioning.
* Added iprint output to all the linear and nonlinear solvers.
* Convert CADRE problem for use with the Alpha, including Linear Gauss-Seidel.
* Added support for distributed components.
* Added Surrogate Generators
* Further work on parallel, incuding:
    - Got parallel working with petsc 3.6.
    - Got parallel derivs in adjoint when voi are under parallel goups
    - Get gradient calculation working for constraints that live in (or below) parallel systems under MPI.


Bugfixes:
* Fixed bug where derivative calculation breaks when a parameter sub_slice is added to a driver.
* pyoptsparse now works with Python 3.4.x
* Made dump recorder work in parallel for CADRE. Also, updated drivers so that all obj/cons are gathered by the time we record.
* When calling group.subsystems with local=True, execution order of systems is now preserved.
* User now gets a clearer error about petscImpl if they try to run under MPI without the petsc_impl
* ExecComp now raises an exception if any of the kwargs passed to init are not variables found in the ExecComp equations.
* Driver.set_param no longer ignores 'indices' metadata.
* Promotion of a non-existent variable now provides full path name in the error message.
* Fixed a bug in reverse mode when using apply_linear
* Now skips tests (instead of failing) in test_mpi_derivs.py if petsc4py is not installed on host system.
 ---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.5 Alpha Release Notes
August 12, 2015

* Forgot to update __version__   <:)

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.4 Alhpa Release Notes
August 12, 2015

Features:
* Speed up Setup() a lot!
* ExternalCode component added, with documentation added to User Guide.
* MetaModel component docs examples
* User can connect a single element from a src array to a target scalar float variable.
* imports made simpler, now from top-level packages (e.g. core, components, etc.)
* MPI parallelization tutorial added to User Guide.
* Distributed component tutorial added to User Guide.
* check_partial_derivatives example added to User Guide.
* Changed filenames and option names for internal consistency
* refactored the variable access from Problem so all vars are now
  referenced via promoted names

Bug Fixes:
*Fixed bug where there was a key error when finite-differencing a Problem with
params buried in sub-Groups.
* Fixed a bug where connections to promoted vars with src_indices were broken.
* pyoptsparse now works with Python3
* fixed a key error when finite differencing across groups with param comps

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.3 Alpha Release Notes
July 24, 2015

* Another version issue, this time with the docs.   <:)

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.2 Alpha Release Notes
July 24, 2015

* Forgot to update __version__   <:)

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0.1 Alpha Release Notes
July 24, 2015

* Auto-ordering of children of a Group (no longer running in instantiation order)
* Manual ordering of children of a Group is possible via the set_order method on Group
* MetaModel component and Kriging surrogate model were added
* Docs hosted on read-the-docs now

---------------------------------------------------------------------------------------------------
OpenMDAO Version 1.0 Alpha Release Notes
July 20, 2015

Initial Release

Differences from previous code base:
* 10x smaller code base (~5000 lines of code compared to ~50,000 before)
* Compatible with both Python 2.7+ and Python 3.4+
* Install using pip, just like any other Python package
* No more Traits dependency, and no more weird class-like variable definitions anymore!
* Ability to manually group components to be finite-differenced together
* No more dataflow/workflow duality. Now you just define a single model hierarchy
* No more Assembly overhead. Grouping components no longer introduces any inefficiencies
* Parallel execution (and parallel adjoint derivatives) with an MPI distributed-memory data passing system

Install: http://openmdao.org/docs/getting-started/install.html
